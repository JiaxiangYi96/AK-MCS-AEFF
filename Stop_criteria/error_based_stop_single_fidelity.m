function obj=error_based_stop_single_fidelity(search_x,kriging_model,CI_factor)
% S is the sample set generated by MCS
% Kriging_model is the surrogate model generated by the last generation

% 
search_y=predictor(search_x,kriging_model);
S_predict_safe=search_x(find(search_y>=0),:);
S_predict_fail=search_x(find(search_y<0),:);

%% analysis for the samples in the safe domain
[Safe_y,S_mse]=predictor(S_predict_safe,kriging_model);
Safe_mse=sqrt(max(0,S_mse));
% calculate the probability of failure

X_temp=-abs(Safe_y./Safe_mse);
p_fail=Gaussian_CDF(X_temp);
% P_fail=normcdf(0,Safe_y,Safe_mse);
mu_fail=sum(p_fail);
sigma_2_fail=sum((1-p_fail).*(p_fail));
CI_fail=[mu_fail-1.96*sigma_2_fail,mu_fail+1.96*sigma_2_fail];
CI_fail_max=max(CI_fail);

%% analysis for the samples in the failure domain
[fail_y,f_mse]=predictor(S_predict_fail,kriging_model);
fail_mse=sqrt(max(0,f_mse));
% calculate the probability of failure

X_temp=-abs(fail_y./fail_mse);
p_safe=Gaussian_CDF(X_temp);
% P_fail=normcdf(0,Safe_y,Safe_mse);
mu_safe=sum(p_safe);
sigma_2_safe=sum((1-p_safe).*(p_safe));

lb_safe=poissinv(CI_factor,mu_safe);
up_safe=poissinv(1-CI_factor,mu_safe);
CI_safe_max=max(lb_safe,up_safe);


%% calculate the final error
predict_Ny=size(S_predict_fail,1);
% obj=abs(predict_Ny./(predict_Ny+CI_fail_max-CI_safe_max)-1);
error_1=abs((predict_Ny/(predict_Ny-CI_safe_max))-1);
error_2=abs((predict_Ny/(predict_Ny+CI_fail_max))-1);

obj=max(error_1,error_2);


end